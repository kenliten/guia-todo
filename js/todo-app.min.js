(function () { 'use strict'; var a = new PouchDB("todos"), b = new Vue({ el: "#todo-app", data: function () { return { newTodo: "", saveTodosInBrowser: !1, todos: [] } }, methods: { async addTodo() { let b = 0 == this.todos.length ? 1 : this.todos[this.todos.length - 1].id + 1, c = { _id: "" + b, id: b, text: this.newTodo, done: !1 }; this.todos.push(c), this.newTodo = "", this.saveTodosInBrowser && (await a.put(c).catch(function (a) { a && console.warn(a) })) }, async removeTodo(b) { let c = []; for (let a in this.todos.forEach(function (a) { a.id != b && c.push(a) }), this.todos = [], c) this.todos.push(c[a]); this.saveTodosInBrowser && (await a.get(b).then(function (b) { a.remove(b).catch(function (a) { a && console.warn(a) }) }).catch(function (a) { a && console.warn(a) })) }, async todoCompleted(b) { try { this.todos.forEach(function (a) { a.id == b && (a.done = !a.done) }); let a = document.getElementById("todo-" + b), c = ["t-gray", "gray-pale", "border-gray-pale"]; for (let b in c) a.classList.toggle(c[b]); a.style.textDecoration = a.className.includes("gray-pale") ? "line-through" : "none" } catch (a) { console.warn("Was Imposible mark the todo as complete\nError catched: \n" + a) } this.saveTodosInBrowser && (await a.get(b).then(function (a) { return a.done = !a.done, a }).then(function (b) { a.put(b) }).catch(function (a) { a && console.warn(a) })) }, async editTodo(b) { let c = prompt("Write the new content to the TODO"); this.todos.forEach(function (a) { a.id == b && (a.text = c) }); this.saveTodosInBrowser && (await a.get(b).then(function (a) { return a.text = c, a }).then(function (b) { a.put(b) }).catch(function (a) { a && console.warn(a) })) }, todoId: function (a) { return "todo-" + a }, todoTitle: function (a) { return a ? "Completed" : "Uncompleted yet" } } }); a.allDocs({ include_docs: !0 }).then(function (c) { 0 != c.total_rows && (b.saveTodosInBrowser = !0), c.rows.forEach(function (c) { b.saveTodosInBrowser ? b.todos.push(c.doc) : a.remove(c.doc) }) }) })();